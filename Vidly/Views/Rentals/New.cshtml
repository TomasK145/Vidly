@{
    ViewBag.Title = "New Rental Form";
}
<h2>New Rental Form</h2>
<form id="newRental">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" />
        </div>        
    </div>
    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movie" name="movie" data-rule-minOneMovie="true" type="text" value="" class="form-control" />
        </div>        
    </div>
    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group">
        </div>
    </div>    

    </ul>
    <button class="btn btn-primary">Submit</button>
</form>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval") 
    <script>
        $(document).ready(function () {
            var vm = {
                movieIds: []
            }; //view model vramci klienta

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'), //ktora property bude tokenizovana
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                //prefetch: '../data/films/post_1960.json',  //ziska mnozinu defaultnych dat pre prvotne zobrazenie
                remote: {
                    url: '/api/customers?query=%QUERY', //treba upravit URL, %QUERY bude predstavovat text zadany v textboxe
                    wildcard: '%QUERY'
                }
            });

            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'), //ktora property bude tokenizovana
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                //prefetch: '../data/films/post_1960.json',  //ziska mnozinu defaultnych dat pre prvotne zobrazenie
                remote: {
                    url: '/api/movies?query=%QUERY', //treba upravit URL, %QUERY bude predstavovat text zadany v textboxe
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLenght: 3, //query vykonane ak uzivatel zada min  3 znaky
                highlight: true //znaky zadane uzivatelom budu zvyraznene vo vyhladanych vysledkoch
            }, {
                name: 'customers',
                display: 'name', //ktore property budu zobrazovane vo vyhladanych navrhoch
                source: customers //vyssie definovany Bloodhound object
                }).on('typeahead:select', function (e, customer) { //odchytenie eventu vyberu vyhladaneho vysledku - e--> event, customer --> vybrany vysledok
                    vm.customerId = customer.id;
                }); 

            $('#movie').typeahead({
                minLenght: 3,
                highlight: true
            }, {
                    name: 'movies',
                    display: 'name',
                    source: movies
                }).on('typeahead:select', function (e, movie) { 
                    $('#movies').append("<li class='list-group-item'>" + movie.name + '</li>');

                    $('#movie').typeahead('val', ''); //resetovanie textboxu movie
                    vm.movieIds.push(movie.id);
                }); 

            $.validator.addMethod("validCustomer", function () { //javascript custom validator
                return (vm.customerId && vm.customerId !== 0); 
            }, "Please select a valid customer.");

            $.validator.addMethod("minOneMovie", function () {
                return vm.movieIds.length > 0;
            }, "Please select at least one movie.");

            var validator = $('#newRental').validate({  //vykonanie validacie
                submitHandler: function () {
                    //e.preventDefault(); //zabezpeci ze form nebude submitnuty klasicky

                    $.ajax({
                        url: '/api/newRentals',
                        method: 'post',
                        data: vm
                    })
                    .done(function () {
                        toastr.success("Rentals successfully recorded."); //toastr notifikacia v pripade uspechu

                        //precistenie po submitnuti
                        $('#customer').typeahead('val', '');
                        $('#movie').typeahead('val', '');
                        $('#movies').empty();
                        vm = { movieIds: [] };
                        validator.resetForm(); //resetuje formular v zmysle validacie
                    })
                    .fail(function () {
                        toastr.error("Something unexpected happened.");
                        });

                    return false; //zabranenie submitnutiu formularu
                }
            }); 
        });
    </script>
}